apiVersion: apps/v1
kind: Deployment
metadata:
  name: api1reimb-dep
  labels:
    app: api1reimb-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api1reimb-api
  template:
    metadata:
      labels:
        app: api1reimb-api
    spec:
      containers:
        - image: jschuwan/api1
          imagePullPolicy: Always
          name: api1reimb-api
          ports:
            - containerPort: 8080
            
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube-dep
  labels:
    app:  sonarqube
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
        - image:  sonarqube:8.9.7-community
          imagePullPolicy: Always
          name: sonarqube
          ports:
            - containerPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
    app: api1reimb-api
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube-service
spec:
  selector:
    app: sonarqube
  type: LoadBalancer
  ports:
    - port: 9000
      targetPort: 9000
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: app1-service-monitor
spec:
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: graphite-jenkins-gke
  endpoints:
  - port: api1reimb-api
    path: "/actuator/prometheus"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
  containers:
    - name: grafana
      image: grafana/grafana:7.5.2
      imagePullPolicy: IfNotPresent
      ports:
        - containerPort: 3000
          name: http-grafana
          protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /robots.txt
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 2
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 3000
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 250m
          memory: 750Mi
      volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-pv
  volumes:
   - name: grafana-pv
     persistentVolumeClaim:
       claimName: grafana-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: http-grafana
  selector:
    app: grafana
  sessionAffinity: None
  type: LoadBalancer

